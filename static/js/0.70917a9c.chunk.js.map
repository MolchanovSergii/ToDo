{"version":3,"file":"static/js/0.70917a9c.chunk.js","mappings":"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","sources":["pages/ToDoListPage/ToDoListPage.jsx","components/ToDo/ToDoFilterAndSearch.js","components/ToDo/ToDoList.js","components/ToDo/ToDo.js","components/styledContainer.js","components/Button/styledButton.js","components/ErrorMessage/ErrorMessage.js","api/api.js"],"sourcesContent":["import ToDo from \"../../components/ToDo/ToDo\";\r\n\r\nexport default function ToDoListPage() {\r\n  return <ToDo />;\r\n}\r\n","const ToDoFilterAndSearch = ({ filter, setFilter, search, setSearch }) => {\r\n  return (\r\n    <div>\r\n      <label className=\"label\">\r\n        Що обираєш...?\r\n        <select\r\n          className=\"select\"\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        >\r\n          <option value=\"all\">Усі завдання</option>\r\n          <option value=\"active\">В процессі</option>\r\n          <option value=\"completed\">Завершенні</option>\r\n        </select>\r\n      </label>\r\n      <label className=\"label\" htmlFor=\"search-todo\">\r\n        Пошукаєм...?\r\n        <input\r\n          className=\"input\"\r\n          id=\"search-todo\"\r\n          type=\"search\"\r\n          value={search}\r\n          placeholder=\"Підкажи що ми шукаемо?\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoFilterAndSearch;\r\n","import { Link } from \"react-router-dom\";\r\nimport { BaseButton, Button } from \"../Button/styledButton.js\";\r\n\r\nconst ToDoList = ({ todos, onDeleteToDo, onToggleCompleted }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {todos.map(({ id, title, description, checked }) => (\r\n          <li key={id}>\r\n            <div>\r\n              <p className={checked ? \"todo-item completed\" : \"todo-item\"}>\r\n                {title}\r\n              </p>\r\n              <p className={checked ? \"todo-item completed\" : \"todo-item\"}>\r\n                {description}\r\n              </p>\r\n            </div>\r\n            <Button type=\"button\" onClick={() => onDeleteToDo(id)}>\r\n              Видалити To Do\r\n            </Button>\r\n            <BaseButton as={Link} to={`/todo-list/${id}`}>\r\n              Редагувати\r\n            </BaseButton>\r\n            <label htmlFor={`todo-${id}`}>Виконано?</label>\r\n            <input\r\n              id={`todo-${id}`}\r\n              type=\"checkbox\"\r\n              onChange={() => onToggleCompleted(id)}\r\n              checked={checked}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import { useMemo, useState, useEffect } from \"react\";\r\nimport { getTodos, addTodo, updateTodo, deleteTodo } from \"../../api/api.js\";\r\n\r\nimport ToDoFilterAndSearch from \"./ToDoFilterAndSearch.js\";\r\nimport { Container } from \"../styledContainer.js\";\r\nimport { Button } from \"../Button/styledButton.js\";\r\nimport ToDoList from \"./ToDoList.js\";\r\nimport Loader from \"../Loader/Loader.js\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const MIN_LENGTH = 3;\r\nexport const MAX_LENGTH = 50;\r\n\r\nconst ToDo = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [inputTitle, setInputTitle] = useState(\"\");\r\n  const [inputDescription, setInputDescription] = useState(\"\");\r\n\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [showAdd, setShowAdd] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    const fetchTodos = async () => {\r\n      try {\r\n        const res = await getTodos();\r\n        setTodos(res.data ?? []);\r\n        if (res.data.length === 0) {\r\n          setShowAdd(false);\r\n        }\r\n      } catch (err) {\r\n        if (err?.response?.status === 404) {\r\n          navigate(\"/not-found\");\r\n        } else {\r\n          navigate(\"/error-page\");\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTodos();\r\n  }, [navigate]);\r\n\r\n  const onClickHandler = async () => {\r\n    const input = inputTitle.trim();\r\n\r\n    if (input === \"\" || input.length < MIN_LENGTH) {\r\n      setError(`Заголовок має бути не менше ${MIN_LENGTH} символів`);\r\n\r\n      return;\r\n    }\r\n    if (input.length > MAX_LENGTH) {\r\n      setError(`Заголовок має бути не більше ${MAX_LENGTH} символів`);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const newTodo = {\r\n        title: inputTitle,\r\n        description: inputDescription,\r\n        checked: false,\r\n      };\r\n\r\n      const res = await addTodo(newTodo);\r\n      setTodos((prev) => [...prev, res.data]);\r\n      setInputTitle(\"\");\r\n      setInputDescription(\"\");\r\n    } catch (error) {\r\n      setError(\"Помилка при додаванні Todo 😢\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handelKeyDown = (e) => {\r\n    if (e.key === \"Enter\") onClickHandler();\r\n  };\r\n\r\n  const onDeleteToDo = async (id) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      await deleteTodo(id);\r\n      setTodos((prev) => prev.filter((todo) => todo.id !== id));\r\n    } catch (error) {\r\n      setError(\"Помилка при видаленні Todo\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onToggleCompleted = async (id) => {\r\n    const todo = todos.find((todo) => todo.id === id);\r\n\r\n    if (!todo) return;\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const res = await updateTodo(id, { ...todo, checked: !todo.checked });\r\n      setTodos((prev) =>\r\n        prev.map((todo) => (todo.id === id ? res.data : todo))\r\n      );\r\n    } catch (error) {\r\n      setError(\"Помилка при оновленні статусу Todo\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredToDos = useMemo(() => {\r\n    const searchWords = search.toLowerCase().trim();\r\n\r\n    const filterByStatus = todos.filter((todo) => {\r\n      if (filter === \"active\") return !todo.checked;\r\n      if (filter === \"completed\") return todo.checked;\r\n      return true;\r\n    });\r\n    if (!searchWords) return filterByStatus;\r\n\r\n    return filterByStatus.filter((todo) =>\r\n      `${todo.title} ${todo.description}`.toLowerCase().includes(searchWords)\r\n    );\r\n  }, [todos, search, filter]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading && <Loader />}\r\n      {error && <ErrorMessage message={error} />}\r\n      {!loading && !error && todos.length === 0 && (\r\n        <div>\r\n          <Button type=\"button\" onClick={() => setShowAdd(true)}>\r\n            Додати Todo\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {showAdd && (\r\n        <div>\r\n          <label className=\"label\" htmlFor=\"new-todo\">\r\n            New task -{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input\"\r\n            id=\"new-todo\"\r\n            placeholder=\"Введіть нова завдання\"\r\n            value={inputTitle}\r\n            onChange={(e) => setInputTitle(e.target.value)}\r\n            onKeyDown={handelKeyDown}\r\n          />\r\n\r\n          <label className=\"label\" htmlFor=\"new-todo-description\">\r\n            Task description-{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input\"\r\n            id=\"new-todo-description\"\r\n            placeholder=\"Зробить опис завдання\"\r\n            value={inputDescription}\r\n            onChange={(e) => setInputDescription(e.target.value)}\r\n            onKeyDown={handelKeyDown}\r\n          />\r\n          <div className=\"container\">\r\n            <p>Total ToDo's: {todos.length}</p>\r\n            <Button type=\"button\" onClick={onClickHandler}>\r\n              Додати To Do\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <ToDoFilterAndSearch\r\n        filter={filter}\r\n        setFilter={setFilter}\r\n        search={search}\r\n        setSearch={setSearch}\r\n      />\r\n      {filteredToDos.length === 0 && <p>Уп-с ... а я нічого не знайшов</p>}\r\n\r\n      <ToDoList\r\n        todos={filteredToDos}\r\n        onDeleteToDo={onDeleteToDo}\r\n        onToggleCompleted={onToggleCompleted}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BaseButton = styled.button`\r\n  border: none;\r\n  border-radius: 30px;\r\n  background: linear-gradient(135deg, #4f46e5, #3b82f6);\r\n  color: #fff;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.2;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  padding: 10px 20px;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n  transition: 0.3s ease;\r\n\r\n  &:hover {\r\n    background: linear-gradient(135deg, #4338ca, #2563eb);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.98);\r\n  }\r\n`;\r\n\r\nexport const Button = BaseButton;\r\n\r\nexport const LogoutButton = styled(BaseButton)`\r\n  margin-left: auto;\r\n  background: linear-gradient(135deg, #ef4444, #dc2626);\r\n  &:hover {\r\n    background: linear-gradient(135deg, #b91c1c, #991b1b);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst ErrorWrapper = styled.div`\r\n  background-color: #ffe6e6;\r\n  color: #d00;\r\n  padding: 10px 15px;\r\n  border-radius: 8px;\r\n  margin: 10px 0;\r\n  font-size: 14px;\r\n  text-align: center;\r\n`;\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n  if (!message) return null;\r\n  return <ErrorWrapper>{message}</ErrorWrapper>;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:3030\",\r\n  timeout: 3000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const getTodos = () => api.get(\"/todos\");\r\nexport const getTodoById = (id) => api.get(`/todos/${id}`);\r\nexport const addTodo = (newTodo) => api.post(\"/todos\", newTodo);\r\nexport const updateTodo = (id, todo) => api.put(`/todos/${id}`, todo);\r\nexport const deleteTodo = (id) => api.delete(`/todos/${id}`);\r\n\r\nexport const loginUser = async ({ username, password }) => {\r\n  try {\r\n    const res = await api.get(\"/auth\", { params: { username, password } });\r\n    if (res.data.length > 0) {\r\n      return res.data[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n"],"names":["ToDoListPage","_jsx","ToDo","_ref","filter","setFilter","search","setSearch","_jsxs","children","className","value","onChange","e","target","htmlFor","id","type","placeholder","todos","onDeleteToDo","onToggleCompleted","_Fragment","map","_ref2","title","description","checked","Button","onClick","BaseButton","as","Link","to","MIN_LENGTH","MAX_LENGTH","setTodos","useState","inputTitle","setInputTitle","inputDescription","setInputDescription","error","setError","loading","setLoading","showAdd","setShowAdd","navigate","useNavigate","useEffect","async","_res$data","res","getTodos","data","length","err","_err$response","response","status","fetchTodos","onClickHandler","input","trim","newTodo","addTodo","prev","handelKeyDown","key","filteredToDos","useMemo","searchWords","toLowerCase","filterByStatus","todo","includes","Container","Loader","ErrorMessage","message","onKeyDown","ToDoFilterAndSearch","ToDoList","deleteTodo","find","updateTodo","styled","div","button","LogoutButton","ErrorWrapper","api","axios","create","baseURL","timeout","headers","get","getTodoById","post","put","delete","loginUser","username","password","params"],"sourceRoot":""}