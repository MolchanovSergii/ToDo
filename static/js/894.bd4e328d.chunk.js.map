{"version":3,"file":"static/js/894.bd4e328d.chunk.js","mappings":"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","sources":["components/ToDo/ToDoFilterAndSearch.js","components/ToDo/ToDoList.js","components/ToDo/ToDo.js","components/styledContainer.js","components/Button/styledButton.js","components/ErrorMessage/ErrorMessage.js","components/styledFormWrapper.js","components/ToDo/TodoEditForm.js","pages/ToDoEditPage/ToDoEditPage.jsx","api/api.js"],"sourcesContent":["const ToDoFilterAndSearch = ({ filter, setFilter, search, setSearch }) => {\r\n  return (\r\n    <div>\r\n      <label className=\"label\">\r\n        Що обираєш...?\r\n        <select\r\n          className=\"select\"\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        >\r\n          <option value=\"all\">Усі завдання</option>\r\n          <option value=\"active\">В процессі</option>\r\n          <option value=\"completed\">Завершенні</option>\r\n        </select>\r\n      </label>\r\n      <label className=\"label\" htmlFor=\"search-todo\">\r\n        Пошукаєм...?\r\n        <input\r\n          className=\"input\"\r\n          id=\"search-todo\"\r\n          type=\"search\"\r\n          value={search}\r\n          placeholder=\"Підкажи що ми шукаемо?\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoFilterAndSearch;\r\n","import { Link } from \"react-router-dom\";\r\nimport { BaseButton, Button } from \"../Button/styledButton.js\";\r\n\r\nconst ToDoList = ({ todos, onDeleteToDo, onToggleCompleted }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {todos.map(({ id, title, description, checked }) => (\r\n          <li key={id}>\r\n            <div>\r\n              <p className={checked ? \"todo-item completed\" : \"todo-item\"}>\r\n                {title}\r\n              </p>\r\n              <p className={checked ? \"todo-item completed\" : \"todo-item\"}>\r\n                {description}\r\n              </p>\r\n            </div>\r\n            <Button type=\"button\" onClick={() => onDeleteToDo(id)}>\r\n              Видалити To Do\r\n            </Button>\r\n            <BaseButton as={Link} to={`/todo-list/${id}`}>\r\n              Редагувати\r\n            </BaseButton>\r\n            <label htmlFor={`todo-${id}`}>Виконано?</label>\r\n            <input\r\n              id={`todo-${id}`}\r\n              type=\"checkbox\"\r\n              onChange={() => onToggleCompleted(id)}\r\n              checked={checked}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import { useMemo, useState, useEffect } from \"react\";\r\nimport {\r\n  getTodos,\r\n  addTodo,\r\n  updateTodo,\r\n  deleteTodo,\r\n} from \"../../api/api.js\";\r\n\r\nimport ToDoFilterAndSearch from \"./ToDoFilterAndSearch.js\";\r\nimport { Container } from \"../styledContainer.js\";\r\nimport { Button } from \"../Button/styledButton.js\";\r\nimport ToDoList from \"./ToDoList.js\";\r\nimport Loader from \"../Loader/Loader.js\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage.js\";\r\n\r\nexport const MIN_LENGTH = 3;\r\nexport const MAX_LENGTH = 50;\r\n\r\nconst ToDo = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [inputTitle, setInputTitle] = useState(\"\");\r\n  const [inputDescription, setInputDescription] = useState(\"\");\r\n\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [showAdd, setShowAdd] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    const fetchTodos = async () => {\r\n      try {\r\n        const res = await getTodos();\r\n        setTodos(res.data ?? []);\r\n        if (res.data.length === 0) {\r\n          setShowAdd(false);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Помилка при отриманні Todo\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  const onClickHandler = async () => {\r\n    const input = inputTitle.trim();\r\n\r\n    if (input === \"\" || input.length < MIN_LENGTH) {\r\n      setError(`Заголовок має бути не менше ${MIN_LENGTH} символів`);\r\n\r\n      return;\r\n    }\r\n    if (input.length > MAX_LENGTH) {\r\n      setError(`Заголовок має бути не більше ${MAX_LENGTH} символів`);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const newTodo = {\r\n        title: inputTitle,\r\n        description: inputDescription,\r\n        checked: false,\r\n      };\r\n\r\n      const res = await addTodo(newTodo);\r\n      setTodos((prev) => [...prev, res.data]);\r\n      setInputTitle(\"\");\r\n      setInputDescription(\"\");\r\n    } catch (error) {\r\n      setError(\"Помилка при додаванні Todo 😢\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handelKeyDown = (e) => {\r\n    if (e.key === \"Enter\") onClickHandler();\r\n  };\r\n\r\n  const onDeleteToDo = async (id) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      await deleteTodo(id);\r\n      setTodos((prev) => prev.filter((todo) => todo.id !== id));\r\n    } catch (error) {\r\n      setError(\"Помилка при видаленні Todo\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onToggleCompleted = async (id) => {\r\n    const todo = todos.find((todo) => todo.id === id);\r\n\r\n    if (!todo) return;\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const res = await updateTodo(id, { ...todo, checked: !todo.checked });\r\n      setTodos((prev) =>\r\n        prev.map((todo) => (todo.id === id ? res.data : todo))\r\n      );\r\n    } catch (error) {\r\n      setError(\"Помилка при оновленні статусу Todo\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const filteredToDos = useMemo(() => {\r\n    const searchWords = search.toLowerCase().trim();\r\n\r\n    const filterByStatus = todos.filter((todo) => {\r\n      if (filter === \"active\") return !todo.checked;\r\n      if (filter === \"completed\") return todo.checked;\r\n      return true;\r\n    });\r\n    if (!searchWords) return filterByStatus;\r\n\r\n    return filterByStatus.filter((todo) =>\r\n      `${todo.title} ${todo.description}`.toLowerCase().includes(searchWords)\r\n    );\r\n  }, [todos, search, filter]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading && <Loader />}\r\n      {error && <ErrorMessage message={error} />}\r\n      {!loading && !error && todos.length === 0 && (\r\n        <div>\r\n          <Button type=\"button\" onClick={() => setShowAdd(true)}>\r\n            Додати Todo\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {showAdd && (\r\n        <div>\r\n          <label className=\"label\" htmlFor=\"new-todo\">\r\n            New task -{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input\"\r\n            id=\"new-todo\"\r\n            placeholder=\"Введіть нова завдання\"\r\n            value={inputTitle}\r\n            onChange={(e) => setInputTitle(e.target.value)}\r\n            onKeyDown={handelKeyDown}\r\n          />\r\n\r\n          <label className=\"label\" htmlFor=\"new-todo-description\">\r\n            Task description-{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input\"\r\n            id=\"new-todo-description\"\r\n            placeholder=\"Зробить опис завдання\"\r\n            value={inputDescription}\r\n            onChange={(e) => setInputDescription(e.target.value)}\r\n            onKeyDown={handelKeyDown}\r\n          />\r\n          <div className=\"container\">\r\n            <p>Total ToDo's: {todos.length}</p>\r\n            <Button type=\"button\" onClick={onClickHandler}>\r\n              Додати To Do\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <ToDoFilterAndSearch\r\n        filter={filter}\r\n        setFilter={setFilter}\r\n        search={search}\r\n        setSearch={setSearch}\r\n      />\r\n      {filteredToDos.length === 0 && <p>Уп-с ... а я нічого не знайшов</p>}\r\n\r\n      <ToDoList\r\n        todos={filteredToDos}\r\n        onDeleteToDo={onDeleteToDo}\r\n        onToggleCompleted={onToggleCompleted}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BaseButton = styled.button`\r\n  border: none;\r\n  border-radius: 30px;\r\n  background: linear-gradient(135deg, #4f46e5, #3b82f6);\r\n  color: #fff;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.2;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  padding: 10px 20px;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n  transition: 0.3s ease;\r\n\r\n  &:hover {\r\n    background: linear-gradient(135deg, #4338ca, #2563eb);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.98);\r\n  }\r\n`;\r\n\r\nexport const Button = BaseButton;\r\n","import styled from \"styled-components\";\r\n\r\nconst ErrorWrapper = styled.div`\r\n  background-color: #ffe6e6;\r\n  color: #d00;\r\n  padding: 10px 15px;\r\n  border-radius: 8px;\r\n  margin: 10px 0;\r\n  font-size: 14px;\r\n  text-align: center;\r\n`;\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n  if (!message) return null;\r\n  return <ErrorWrapper>{message}</ErrorWrapper>;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormWrapper = styled.div`\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button } from \"../Button/styledButton\";\r\nimport { FormWrapper } from \"../styledFormWrapper\";\r\n\r\nimport { MIN_LENGTH, MAX_LENGTH } from \"./ToDo\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nconst TodoEditForm = ({ editingTodo, onCancel, onSave }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [checked, setChecked] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (editingTodo) {\r\n      setTitle(editingTodo.title);\r\n      setDescription(editingTodo.description);\r\n      setChecked(editingTodo.checked);\r\n    }\r\n  }, [editingTodo]);\r\n\r\n  const handleSave = () => {\r\n    const input = title.trim();\r\n\r\n    if (input === \"\" || input.length < MIN_LENGTH) {\r\n      setError(`Заголовок має бути не менше ${MIN_LENGTH} символів`);\r\n\r\n      return;\r\n    }\r\n    if (input.length > MAX_LENGTH) {\r\n      setError(`Заголовок має бути не більше ${MAX_LENGTH} символів`);\r\n      return;\r\n    }\r\n\r\n    onSave({ ...editingTodo, title, description, checked });\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Escape\") onCancel();\r\n  };\r\n\r\n  return (\r\n    <FormWrapper onKeyDown={handleKeyDown} tabIndex={0}>\r\n      {error && <ErrorMessage message={error} />}\r\n\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n\r\n      <Button type=\"button\" onClick={handleSave}>\r\n        Зберегти\r\n      </Button>\r\n      <Button type=\"button\" onClick={onCancel}>\r\n        Скасувати\r\n      </Button>\r\n      <label htmlFor=\"todo-editing-completed\">Виконано?</label>\r\n      <input\r\n        id=\"todo-editing-completed\"\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={(e) => setChecked(e.target.checked)}\r\n      />\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default TodoEditForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { getTodoById, updateTodo } from \"../../api/api\";\r\nimport TodoEditForm from \"../../components/ToDo/TodoEditForm\";\r\nimport { Container } from \"../../components/styledContainer\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\n\r\nexport default function ToDoEditPage() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [todo, setTodo] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchTodo = async () => {\r\n      let ignore = false;\r\n\r\n      try {\r\n        setLoading(true);\r\n        setError(\"\");\r\n        if (!ignore) {\r\n          const res = await getTodoById(id);\r\n          setTodo(res.data);\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        if (!ignore) {\r\n        }\r\n        setError(\"Помилка при завантаженні Todo\");\r\n      } finally {\r\n        if (!ignore) setLoading(false);\r\n      }\r\n      return () => (ignore = true);\r\n    };\r\n\r\n    fetchTodo();\r\n  }, [id]);\r\n\r\n  const handleSave = async (updatedTodo) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const res = await updateTodo(updatedTodo.id, updatedTodo);\r\n      setTodo(res.data);\r\n      navigate(\"/todo-list\");\r\n    } catch (error) {\r\n      setError(\"Помилка при збереженні Todo\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate(\"/todo-list\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {loading && <Loader />}\r\n      {error && <ErrorMessage message={error} />}\r\n      {!loading && !error && todo && (\r\n        <TodoEditForm\r\n          editingTodo={todo}\r\n          onSave={handleSave}\r\n          onCancel={handleCancel}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:3030\",\r\n  timeout: 3000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const getTodos = () => api.get(\"/todos\");\r\nexport const getTodoById = (id) => api.get(`/todos/${id}`);\r\nexport const addTodo = (newTodo) => api.post(\"/todos\", newTodo);\r\nexport const updateTodo = (id, todo) => api.put(`/todos/${id}`, todo);\r\nexport const deleteTodo = (id) => api.delete(`/todos/${id}`);\r\n"],"names":["_ref","filter","setFilter","search","setSearch","_jsxs","children","className","value","onChange","e","target","_jsx","htmlFor","id","type","placeholder","todos","onDeleteToDo","onToggleCompleted","_Fragment","map","_ref2","title","description","checked","Button","onClick","BaseButton","as","Link","to","MIN_LENGTH","MAX_LENGTH","ToDo","setTodos","useState","inputTitle","setInputTitle","inputDescription","setInputDescription","error","setError","loading","setLoading","showAdd","setShowAdd","useEffect","async","_res$data","res","getTodos","data","length","err","fetchTodos","onClickHandler","input","trim","newTodo","addTodo","prev","handelKeyDown","key","filteredToDos","useMemo","searchWords","toLowerCase","filterByStatus","todo","includes","Container","Loader","ErrorMessage","message","onKeyDown","ToDoFilterAndSearch","ToDoList","deleteTodo","find","updateTodo","styled","div","button","ErrorWrapper","FormWrapper","editingTodo","onCancel","onSave","setTitle","setDescription","setChecked","tabIndex","handleSave","ToDoEditPage","useParams","navigate","useNavigate","setTodo","ignore","getTodoById","fetchTodo","TodoEditForm","updatedTodo","handleCancel","api","axios","create","baseURL","timeout","headers","get","post","put","delete"],"sourceRoot":""}